{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\project3\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { DiaryStateContext } from \"../App\";\nimport { getMonthRangeByDate } from \"../util\";\nimport Button from \"../component/Button\";\nimport Header from \"../component/Header\";\nimport DiaryList from \"../component/DiaryList\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:5000/\";\nconst Home = () => {\n  _s();\n  const data = useContext(DiaryStateContext);\n  const [pivotDate, setPivotDate] = useState(new Date());\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    if (data.length >= 1) {\n      const {\n        beginTimeStamp,\n        endTimeStamp\n      } = getMonthRangeByDate(pivotDate);\n      setFilteredData(data.filter(it => beginTimeStamp <= it.date && it.date <= endTimeStamp));\n    } else {\n      setFilteredData([]);\n    }\n  }, [data, pivotDate]);\n  const headerTitle = `${pivotDate.getFullYear()}년 ${pivotDate.getMonth() + 1}월`;\n  const onIncreaseMonth = () => {\n    setPivotDate(new Date(pivotDate.getFullYear(), pivotDate.getMonth() + 1));\n  };\n  const onDecreaseMonth = () => {\n    setPivotDate(new Date(pivotDate.getFullYear(), pivotDate.getMonth() - 1));\n  };\n  const testApi = () => {\n    axios.get(URL + \"/db\").then(res => {\n      console.log(JSON.stringify(res.data));\n    }).catch(err => console.log(\"에러\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: headerTitle,\n      leftChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"<\",\n        onClick: onDecreaseMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 28\n      }, this),\n      rightChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: \">\",\n        onClick: onIncreaseMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      data: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      test: \"test\",\n      onClick: testApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"E3T0HLeooiVnpHt8vEa8J8kALs4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useContext","DiaryStateContext","getMonthRangeByDate","Button","Header","DiaryList","axios","jsxDEV","_jsxDEV","URL","Home","_s","data","pivotDate","setPivotDate","Date","filteredData","setFilteredData","length","beginTimeStamp","endTimeStamp","filter","it","date","headerTitle","getFullYear","getMonth","onIncreaseMonth","onDecreaseMonth","testApi","get","then","res","console","log","JSON","stringify","catch","err","children","title","leftChild","text","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rightChild","test","_c","$RefreshReg$"],"sources":["D:/React/project3/src/pages/Home.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\n\r\nimport { DiaryStateContext } from \"../App\";\r\nimport { getMonthRangeByDate } from \"../util\";\r\nimport Button from \"../component/Button\";\r\nimport Header from \"../component/Header\";\r\nimport DiaryList from \"../component/DiaryList\";\r\n\r\nimport axios from \"axios\";\r\nconst URL = \"http://localhost:5000/\";\r\n\r\nconst Home = () => {\r\n    const data = useContext(DiaryStateContext);\r\n    const [pivotDate, setPivotDate] = useState(new Date());\r\n    const [filteredData, setFilteredData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if (data.length >= 1) {\r\n            const { beginTimeStamp, endTimeStamp } = getMonthRangeByDate(pivotDate);\r\n            setFilteredData(\r\n              data.filter(\r\n                (it) => beginTimeStamp <= it.date && it.date <= endTimeStamp\r\n              )\r\n            );\r\n          } else {\r\n            setFilteredData([]);\r\n          }  \r\n    }, [data, pivotDate]);\r\n\r\n    const headerTitle = `${pivotDate.getFullYear()}년 ${pivotDate.getMonth() + 1}월`;\r\n\r\n    const onIncreaseMonth = ()=>{\r\n        setPivotDate(new Date(pivotDate.getFullYear(), pivotDate.getMonth() + 1));\r\n    };\r\n\r\n    const onDecreaseMonth = ()=>{\r\n        setPivotDate(new Date(pivotDate.getFullYear(), pivotDate.getMonth() - 1));\r\n    };\r\n\r\n    const testApi = () =>{\r\n      axios.get(URL + \"/db\")\r\n        .then((res) => {\r\n          console.log(JSON.stringify(res.data))\r\n          \r\n          \r\n        })\r\n        .catch(err=> console.log(\"에러\"))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                title={headerTitle}\r\n                leftChild={<Button text={\"<\"} onClick={onDecreaseMonth} />}\r\n                rightChild={<Button text={\">\"} onClick={onIncreaseMonth} />}                \r\n            />\r\n            <DiaryList data = {filteredData} />\r\n            <Button test={\"test\"} onClick={testApi} />\r\n        </div>\r\n    );\r\n        \r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}